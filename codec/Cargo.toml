[package]
name = "zalgo-codec"
authors = ["Johanna Sörngård (jsorngard@gmail.com)", "Scott Conner", "Alex Keizer (alex@keizer.dev)"]
version = "0.9.6"
edition = "2021"
keywords = ["unicode", "obfuscation", "encoding", "zalgo"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/JSorngard/zalgo_codec"
description = "A crate for converting an ASCII text string to a single unicode grapheme cluster and back. Provides a macro for embedding Rust source code that has been encoded in this way."

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
zalgo-codec-common = {path = "../common"}
zalgo-codec-macro = {path = "../macro", optional = true}
anyhow = {version = "1.0", optional = true}
iced = {version = "0.10", optional = true}
rfd = {version = "0.12", optional = true}
cli-clipboard = {version = "0.4", optional = true}
clap = {version = "4.4", features = ["derive"], optional = true}

[dev-dependencies]
rand = "0.8"
unicode-segmentation = "1.10.1"

[features]
default = ["macro", "std"]

# Builds a binary that can be used to test out the codec.
binary = ["std", "dep:clap", "dep:anyhow"]

# Builds an optional GUI into the binary.
gui = ["binary", "dep:iced", "dep:rfd", "dep:cli-clipboard"]

# Implements the [`Serialize`] and [`Deserialize`] traits from serde for [`ZalgoString`].
serde = ["zalgo-codec-common/serde"]

# Enables the proc-macro [`zalgo_embed`]
macro = ["dep:zalgo-codec-macro"]

# Enables the library to link to the standard library.
# Used to implement the [`std::error::Error`] trait for [`zalgo_codec_common::Error`].
std = ["zalgo-codec-common/std"]

[package.metadata.docs.rs]
all-features = true

[[bin]]
name = "zalgo_codec"
path = "src/main.rs"
required-features = ["binary"]

[lib]
name = "zalgo_codec"
path = "src/lib.rs"
