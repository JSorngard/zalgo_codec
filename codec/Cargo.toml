[package]
name = "zalgo-codec"
authors = ["Johanna Sörngård (jsorngard@gmail.com)", "Scott Conner", "Alex Keizer (alex@keizer.dev)"]
version = "0.8.0"
edition = "2021"
license = "MIT"
repository = "https://github.com/JSorngard/zalgo_codec"
description = "A crate for converting an ASCII text string to a single unicode grapheme cluster and back. Provides a macro for embedding Rust source code that has been encoded in this way. Additionally provides a function that encodes Python code and wraps it in a decoder so that it retains its functionality."

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
zalgo-codec-common = {path = "../common"}
zalgo-codec-macro = {path = "../macro"}
clap = {version = "4.3", features = ["derive"], optional = true}

[dev-dependencies]
rand = "0.8"
unicode-segmentation = "1.10.1"

[features]
## Builds a binary that can be used to test out the codec
binary = ["dep:clap"]
serde_support = ["zalgo-codec-common/serde_support"]

[[bin]]
name = "zalgo_codec"
path = "src/main.rs"
required-features = ["binary"]

[lib]
name = "zalgo_codec"
path = "src/lib.rs"